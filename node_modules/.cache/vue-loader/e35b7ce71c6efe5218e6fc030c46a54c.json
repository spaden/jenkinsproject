{"remainingRequest":"D:\\projects\\github\\marriageApp_redesign\\marriage_code\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\projects\\github\\marriageApp_redesign\\marriage_code\\src\\App.vue?vue&type=style&index=0&id=7ba5bd90&lang=scss","dependencies":[{"path":"D:\\projects\\github\\marriageApp_redesign\\marriage_code\\src\\App.vue","mtime":1706099868194},{"path":"D:\\projects\\github\\marriageApp_redesign\\marriage_code\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\github\\marriageApp_redesign\\marriage_code\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\projects\\github\\marriageApp_redesign\\marriage_code\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\projects\\github\\marriageApp_redesign\\marriage_code\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\github\\marriageApp_redesign\\marriage_code\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\projects\\github\\marriageApp_redesign\\marriage_code\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQojYXBwIHsNCiAgZm9udC1mYW1pbHk6IEF2ZW5pciwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsNCiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7DQogIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7DQogIC8vIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQp9DQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AAoGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <router-view />\r\n    <div class=\"testAudio\">\r\n      <iframe\r\n        id=\"songBackground\"\r\n        width=\"0.2\"\r\n        height=\"0.2\"\r\n        frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowfullscreen\r\n      ></iframe>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from \"vue-property-decorator\"\r\nimport { set } from \"vue/types/umd\"\r\nimport router from \"./router\"\r\nimport { ImageQuestion, ColorsQuestion, MapResults } from \"@/utilities/mapObject\"\r\n/* eslint-disable */\r\n@Component\r\nexport default class App extends Vue {\r\n  testSrc = [\r\n    \"https://www.youtube.com/embed/w8YVqBs6kyE?autoplay=1&start=10\",\r\n    \"https://www.youtube.com/embed/3UwVodF5Yu8?autoplay=1&start=28\",\r\n  ]\r\n\r\n  mounted() {\r\n    if (window.innerWidth <= 500) {\r\n      this.$store.dispatch(\"changeView\", true)\r\n    }\r\n    window.addEventListener(\"resize\", () => {\r\n      const width = window.innerWidth\r\n      if (width <= 770) {\r\n        this.$store.dispatch(\"changeView\", true)\r\n      } else if (width > 1024) {\r\n        this.$store.dispatch(\"changeView\", false)\r\n      }\r\n    })\r\n    const item = Math.floor(Math.random() * this.testSrc.length)\r\n    const iframe = document.getElementById(\"songBackground\") as HTMLElement\r\n\r\n    iframe.setAttribute(\"src\", this.testSrc[item])\r\n\r\n    setTimeout(() => {\r\n\t\t\tif (item === 1) {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tiframe.setAttribute(\"src\", this.testSrc[0])\r\n\t\t\t\t}, 4000)\r\n\t\t\t} else {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tiframe.setAttribute(\"src\", this.testSrc[1])\r\n\t\t\t\t}, 4000)\r\n\t\t\t}\r\n\t\t}, 235000)\r\n    this.generateQuestions()\r\n  }\r\n\r\n  generateQuestions() {\r\n    const colorQuestions = [\"Blue\", \"Red\", \"Yellow\", \"Violet\", \"Orange\"]\r\n    const colors = [\r\n      [\"#97FBEC\", \"#2486FB\", \"#122EF9\"],\r\n      [\"#E3451B\", \"#FF5733\", \"#C91F09\"],\r\n      [\"#FCE104\", \"#DFD264\", \"#AD9E24\"],\r\n      [\"#BF09FC\", \"#BF79D6\", \"#6C2A82\"],\r\n      [\"#EF8224\", \"#F2A349\", \"#F76E0F\"],\r\n    ]\r\n    const weights = [\r\n      [30, 10, 20],\r\n      [10, 30, 20],\r\n      [30, 20, 10],\r\n      [20, 10, 30],\r\n      [10, 30, 20],\r\n    ]\r\n    var colorObjs: Array<ColorsQuestion> = []\r\n    for (var i = 0; i < 5; i++) {\r\n      const colorQuestionObj = new ColorsQuestion(colors[i], colorQuestions[i])\r\n      colorObjs.push(colorQuestionObj)\r\n    }\r\n\r\n    var imageObjs: Array<ImageQuestion> = []\r\n    const images = [\"https://github.com/spaden/hookdate.github.io/blob/master/one.jpg?raw=true\", \r\n                    \"https://github.com/spaden/hookdate.github.io/blob/master/two.jpg?raw=true\", \r\n                    \"https://github.com/spaden/hookdate.github.io/blob/master/three.jpg?raw=true\", \r\n                    \"https://github.com/spaden/hookdate.github.io/blob/master/four.jpg?raw=true\", \r\n                    \"https://github.com/spaden/hookdate.github.io/blob/master/five.jpg?raw=true\"\r\n                   ]\r\n    for (var i = 0; i < images.length; i++) {\r\n      const imgObj = new ImageQuestion(images[i], weights[i])\r\n      imageObjs.push(imgObj)\r\n    }\r\n\r\n    var wholeObjs = new MapResults(colorObjs, imageObjs).questionsWhole()\r\n    this.$store.dispatch('addWholeObjs', wholeObjs)\r\n    console.log\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  // text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style>\r\n"]}]}